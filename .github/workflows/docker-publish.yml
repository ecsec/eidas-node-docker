name: Docker

on:
  push:
    tags:
    - 'v*.*.*-*'
    - 'v*.*.*-prerelease-*'

env:
  IMAGE_NAME: ecsec/eidas-node

jobs:
  build-docker:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.2

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into registry docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      # Determine Tag for Docker image
      - name: Determine Tag
        id: determine-tag
        run: |
          echo ::set-output name=TAG::$(echo $GITHUB_REF | cut -d / -f 3 | cut -c 2-)
          echo ::set-output name=EIDAS_NODE_VERSION::$(echo $GITHUB_REF | cut -d / -f 3 | cut -d - -f 1 | cut -c 2-)

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        if : "! contains(steps.determine-tag.outputs.TAG, 'prerelease')"
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            EIDAS_NODE_VERSION=${{ steps.determine-tag.outputs.EIDAS_NODE_VERSION }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.determine-tag.outputs.TAG }}
            ${{ env.IMAGE_NAME }}:latest
          push: true

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker prerelease image
        id: build-and-push-prerelease
        if : "contains(steps.determine-tag.outputs.TAG, 'prerelease')"
        uses: docker/build-push-action@v3
        with:
          context: .
          # We need a different eIDAS-Node URL when building an image with a prerelease version
          build-args: |
            EIDAS_NODE_VERSION=${{ steps.determine-tag.outputs.EIDAS_NODE_VERSION }}
            EIDAS_NODE_URL=https://ec.europa.eu/cefdigital/artifact/repository/eid/eu/eIDAS-node-prerelease/${{ steps.determine-tag.outputs.EIDAS_NODE_VERSION }}/eIDAS-node-prerelease-${{ steps.determine-tag.outputs.EIDAS_NODE_VERSION }}.zip
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.determine-tag.outputs.TAG }}
          push: true

  build-helm:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      HELM_REPO: https://mvn.ecsec.de/repository/helm-public/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.0.2

      # Install Helm
      # https://github.com/Azure/setup-helm
      - name: Install Helm
        uses: azure/setup-helm@v3.3
        id: install

      # Package Helm Chart
      - name: Package Helm chart
        id: package-helm
        run: |
          GITHUB_TAG=$(echo $GITHUB_REF | cut -d / -f 3 | cut -c 2-)
          sed -i 's@appVersion: "latest"@appVersion: "'"$GITHUB_TAG"'"@' helm/Chart.yaml
          echo ::set-output name=TAG::$(echo $GITHUB_TAG)

          helm package helm/

      # Push Helm Chart
      # https://github.com/wei/curl
      - name: Push Helm chart
        uses: wei/curl@v1
        id: push-helm
        with:
          args: -u ${{ secrets.NXS_HELM_USER }}:${{ secrets.NXS_HELM_PASS }} ${{ env.HELM_REPO }} --upload-file "eidas-node-${{ steps.package-helm.outputs.TAG }}.tgz" -v
